"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var base_1 = require("./base");
var query_1 = require("./query");
var returnInfo_1 = require("./returnInfo");
var QueryArticles = /** @class */ (function (_super) {
    __extends(QueryArticles, _super);
    function QueryArticles(args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this) || this;
        var keywords = args.keywords, conceptUri = args.conceptUri, categoryUri = args.categoryUri, sourceUri = args.sourceUri, sourceLocationUri = args.sourceLocationUri, sourceGroupUri = args.sourceGroupUri, authorUri = args.authorUri, locationUri = args.locationUri, lang = args.lang, dateStart = args.dateStart, dateEnd = args.dateEnd, dateMentionStart = args.dateMentionStart, dateMentionEnd = args.dateMentionEnd, ignoreKeywords = args.ignoreKeywords, ignoreConceptUri = args.ignoreConceptUri, ignoreCategoryUri = args.ignoreCategoryUri, ignoreSourceUri = args.ignoreSourceUri, ignoreSourceLocationUri = args.ignoreSourceLocationUri, ignoreSourceGroupUri = args.ignoreSourceGroupUri, ignoreAuthorUri = args.ignoreAuthorUri, ignoreLocationUri = args.ignoreLocationUri, ignoreLang = args.ignoreLang, _a = args.keywordsLoc, keywordsLoc = _a === void 0 ? "body" : _a, _b = args.ignoreKeywordsLoc, ignoreKeywordsLoc = _b === void 0 ? "body" : _b, _c = args.isDuplicateFilter, isDuplicateFilter = _c === void 0 ? "keepAll" : _c, _d = args.hasDuplicateFilter, hasDuplicateFilter = _d === void 0 ? "keepAll" : _d, _e = args.eventFilter, eventFilter = _e === void 0 ? "keepAll" : _e, _f = args.startSourceRankPercentile, startSourceRankPercentile = _f === void 0 ? 0 : _f, _g = args.endSourceRankPercentile, endSourceRankPercentile = _g === void 0 ? 100 : _g, _h = args.minSentiment, minSentiment = _h === void 0 ? -1 : _h, _j = args.maxSentiment, maxSentiment = _j === void 0 ? 1 : _j, _k = args.dataType, dataType = _k === void 0 ? "news" : _k, _l = args.requestedResult, requestedResult = _l === void 0 ? new RequestArticlesInfo() : _l, unsupported = __rest(args, ["keywords", "conceptUri", "categoryUri", "sourceUri", "sourceLocationUri", "sourceGroupUri", "authorUri", "locationUri", "lang", "dateStart", "dateEnd", "dateMentionStart", "dateMentionEnd", "ignoreKeywords", "ignoreConceptUri", "ignoreCategoryUri", "ignoreSourceUri", "ignoreSourceLocationUri", "ignoreSourceGroupUri", "ignoreAuthorUri", "ignoreLocationUri", "ignoreLang", "keywordsLoc", "ignoreKeywordsLoc", "isDuplicateFilter", "hasDuplicateFilter", "eventFilter", "startSourceRankPercentile", "endSourceRankPercentile", "minSentiment", "maxSentiment", "dataType", "requestedResult"]);
        if (!_.isEmpty(unsupported)) {
            // Check ["sortBy", "sortByAsc", "returnInfo", "maxItems"] for cases when we are coming from QueryArticlesIter
            if (!_.some(_.keys(unsupported), function (key) { return _.includes(["sortBy", "sortByAsc", "returnInfo", "maxItems"], key); })) {
                console.warn("QueryArticles: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
            }
        }
        _this.setVal("action", "getArticles");
        _this.setQueryArrVal(keywords, "keyword", "keywordOper", "and");
        _this.setQueryArrVal(conceptUri, "conceptUri", "conceptOper", "and");
        _this.setQueryArrVal(categoryUri, "categoryUri", "categoryOper", "or");
        _this.setQueryArrVal(sourceUri, "sourceUri", "sourceOper", "or");
        _this.setQueryArrVal(sourceLocationUri, "sourceLocationUri", undefined, "or");
        _this.setQueryArrVal(sourceGroupUri, "sourceGroupUri", "sourceGroupOper", "or");
        _this.setQueryArrVal(authorUri, "authorUri", "authorOper", "or");
        _this.setQueryArrVal(locationUri, "locationUri", undefined, "or");
        _this.setQueryArrVal(lang, "lang", undefined, "or");
        if (!_.isUndefined(dateStart)) {
            _this.setDateVal("dateStart", dateStart);
        }
        if (!_.isUndefined(dateEnd)) {
            _this.setDateVal("dateEnd", dateEnd);
        }
        if (!_.isUndefined(dateMentionStart)) {
            _this.setDateVal("dateMentionStart", dateMentionStart);
        }
        if (!_.isUndefined(dateMentionEnd)) {
            _this.setDateVal("dateMentionEnd", dateMentionEnd);
        }
        _this.setQueryArrVal(ignoreKeywords, "ignoreKeyword", undefined, "or");
        _this.setQueryArrVal(ignoreConceptUri, "ignoreConceptUri", undefined, "or");
        _this.setQueryArrVal(ignoreCategoryUri, "ignoreCategoryUri", undefined, "or");
        _this.setQueryArrVal(ignoreSourceUri, "ignoreSourceUri", undefined, "or");
        _this.setQueryArrVal(ignoreSourceLocationUri, "ignoreSourceLocationUri", undefined, "or");
        _this.setQueryArrVal(ignoreSourceGroupUri, "ignoreSourceGroupUri", undefined, "or");
        _this.setQueryArrVal(ignoreAuthorUri, "ignoreAuthorUri", undefined, "or");
        _this.setQueryArrVal(ignoreLocationUri, "ignoreLocationUri", undefined, "or");
        _this.setQueryArrVal(ignoreLang, "ignoreLang", undefined, "or");
        _this.setValIfNotDefault("keywordLoc", keywordsLoc, "body");
        _this.setValIfNotDefault("ignoreKeywordLoc", ignoreKeywordsLoc, "body");
        _this.setValIfNotDefault("isDuplicateFilter", isDuplicateFilter, "keepAll");
        _this.setValIfNotDefault("hasDuplicateFilter", hasDuplicateFilter, "keepAll");
        _this.setValIfNotDefault("eventFilter", eventFilter, "keepAll");
        if (startSourceRankPercentile < 0 || startSourceRankPercentile % 10 !== 0 || startSourceRankPercentile > 100) {
            throw new Error("StartSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (endSourceRankPercentile < 0 || endSourceRankPercentile % 10 !== 0 || endSourceRankPercentile > 100) {
            throw new Error("EndSourceRankPercentile: Value should be in range 0-90 and divisible by 10.");
        }
        if (startSourceRankPercentile > endSourceRankPercentile) {
            throw new Error("SourceRankPercentile: startSourceRankPercentile should be less than endSourceRankPercentile");
        }
        if (startSourceRankPercentile !== 0) {
            _this.setVal("startSourceRankPercentile", startSourceRankPercentile);
        }
        if (endSourceRankPercentile !== 100) {
            _this.setVal("endSourceRankPercentile", endSourceRankPercentile);
        }
        if (minSentiment > -1 && minSentiment <= 1) {
            _this.setVal("minSentiment", minSentiment);
        }
        if (maxSentiment >= -1 && maxSentiment < 1) {
            _this.setVal("maxSentiment", maxSentiment);
        }
        _this.setValIfNotDefault("dataType", dataType, "news");
        _this.setRequestedResult(requestedResult);
        return _this;
    }
    Object.defineProperty(QueryArticles.prototype, "path", {
        get: function () {
            return "/api/v1/article";
        },
        enumerable: true,
        configurable: true
    });
    QueryArticles.prototype.setRequestedResult = function (requestArticles) {
        if (!(requestArticles instanceof RequestArticles)) {
            throw new Error("QueryArticles class can only accept result requests that are of type RequestArticles");
        }
        this.resultTypeList = [requestArticles];
    };
    QueryArticles.initWithArticleUriList = function (uriList) {
        var q = new QueryArticles();
        if (!_.isArray(uriList)) {
            throw new Error("uriList has to be a list of strings that represent article uris");
        }
        q.params = {
            action: "getArticles",
            articleUri: uriList,
        };
        return q;
    };
    QueryArticles.initWithArticleUriWgtList = function (uriWgtList) {
        var q = new QueryArticles();
        if (!_.isArray(uriWgtList)) {
            throw new Error("uriList has to be a list of strings that represent article uris");
        }
        q.params = {
            action: "getArticles",
            articleUriWgtList: _.join(uriWgtList, ","),
        };
        return q;
    };
    QueryArticles.initWithComplexQuery = function (complexQuery) {
        var query = new QueryArticles();
        if (complexQuery instanceof query_1.ComplexArticleQuery) {
            query.setVal("query", JSON.stringify(complexQuery.getQuery()));
        }
        else if (_.isString(complexQuery)) {
            query.setVal("query", complexQuery);
        }
        else if (_.isObject(complexQuery)) {
            query.setVal("query", JSON.stringify(complexQuery));
        }
        else {
            throw new Error("The instance of query parameter was not a ComplexArticleQuery, a string or an object");
        }
        return query;
    };
    return QueryArticles;
}(base_1.Query));
exports.QueryArticles = QueryArticles;
var QueryArticlesIter = /** @class */ (function (_super) {
    __extends(QueryArticlesIter, _super);
    function QueryArticlesIter(er, args) {
        if (args === void 0) { args = {}; }
        var _this = _super.call(this, args) || this;
        _this.page = 0;
        _this.pages = 1;
        _this.items = [];
        _this.returnedSoFar = 0;
        _this.index = 0;
        _this.callback = _.noop;
        _this.doneCallback = _.noop;
        _.defaults(args, {
            sortBy: "rel",
            sortByAsc: false,
            returnInfo: undefined,
            maxItems: -1,
        });
        var sortBy = args.sortBy, sortByAsc = args.sortByAsc, returnInfo = args.returnInfo, maxItems = args.maxItems;
        _this.er = er;
        _this.sortBy = sortBy;
        _this.sortByAsc = sortByAsc;
        _this.returnInfo = returnInfo;
        _this.maxItems = maxItems;
        return _this;
    }
    QueryArticlesIter.prototype.count = function () {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.setRequestedResult(new RequestArticlesInfo());
                        return [4 /*yield*/, this.er.execQuery(this)];
                    case 1:
                        response = _a.sent();
                        if (_.has(response, "error")) {
                            console.error(_.get(response, "error"));
                        }
                        return [2 /*return*/, _.get(response, "articles.totalResults", 0)];
                }
            });
        });
    };
    QueryArticlesIter.prototype.execQuery = function (callback, doneCallback) {
        if (callback) {
            this.callback = callback;
        }
        if (doneCallback) {
            this.doneCallback = doneCallback;
        }
        this.iterate();
    };
    QueryArticlesIter.initWithComplexQuery = function (er, complexQuery, params) {
        if (params === void 0) { params = {}; }
        var query = new QueryArticlesIter(er, params);
        if (complexQuery instanceof query_1.ComplexArticleQuery) {
            query.setVal("query", JSON.stringify(complexQuery.getQuery()));
        }
        else if (_.isString(complexQuery)) {
            query.setVal("query", complexQuery);
        }
        else if (_.isObject(complexQuery)) {
            query.setVal("query", JSON.stringify(complexQuery));
        }
        else {
            throw new Error("The instance of query parameter was not a ComplexArticleQuery, a string or an object");
        }
        return query;
    };
    QueryArticlesIter.prototype.iterate = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.current) return [3 /*break*/, 1];
                        this.callback(this.current);
                        this.index += 1;
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.getNextBatch()];
                    case 2:
                        if (!(_a.sent())) {
                            this.doneCallback(this.errorMessage);
                            return [2 /*return*/];
                        }
                        _a.label = 3;
                    case 3: return [2 /*return*/, this.iterate()];
                }
            });
        });
    };
    /**
     * Extract the results according to maxItems
     * @param response response from the backend
     */
    QueryArticlesIter.prototype.extractResults = function (response) {
        var results = _.get(response, "articles.results", []);
        var extractedSize = this.maxItems !== -1 ? this.maxItems - this.returnedSoFar : _.size(results);
        return _.compact(_.pullAt(results, _.range(0, extractedSize)));
    };
    Object.defineProperty(QueryArticlesIter.prototype, "current", {
        get: function () {
            return this.items[this.index] || undefined;
        },
        enumerable: true,
        configurable: true
    });
    QueryArticlesIter.prototype.getNextBatch = function () {
        return __awaiter(this, void 0, void 0, function () {
            var requestArticles, response, error, results, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        this.page += 1;
                        if (this.page > this.pages || (this.maxItems !== -1 && this.returnedSoFar >= this.maxItems)) {
                            return [2 /*return*/, false];
                        }
                        requestArticles = new RequestArticlesInfo({
                            page: this.page,
                            sortBy: this.sortBy,
                            sortByAsc: this.sortByAsc,
                            returnInfo: this.returnInfo,
                        });
                        this.setRequestedResult(requestArticles);
                        if (this.er.verboseOutput) {
                            console.log("Downloading article page " + this.page + "...");
                        }
                        return [4 /*yield*/, this.er.execQuery(this)];
                    case 1:
                        response = _a.sent();
                        error = _.get(response, "error", "");
                        if (error) {
                            this.errorMessage = "Error while obtaining a list of articles:  " + this.errorMessage;
                        }
                        else {
                            this.pages = _.get(response, "articles.pages", 0);
                        }
                        results = this.extractResults(response);
                        this.returnedSoFar += _.size(results);
                        this.items = __spread(this.items, results);
                        return [2 /*return*/, true];
                    case 2:
                        error_1 = _a.sent();
                        console.error(error_1);
                        return [2 /*return*/, false];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return QueryArticlesIter;
}(QueryArticles));
exports.QueryArticlesIter = QueryArticlesIter;
var RequestArticles = /** @class */ (function () {
    function RequestArticles() {
    }
    return RequestArticles;
}());
exports.RequestArticles = RequestArticles;
var RequestArticlesInfo = /** @class */ (function (_super) {
    __extends(RequestArticlesInfo, _super);
    function RequestArticlesInfo(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.count, count = _c === void 0 ? 200 : _c, _d = _a.sortBy, sortBy = _d === void 0 ? "date" : _d, _e = _a.sortByAsc, sortByAsc = _e === void 0 ? false : _e, _f = _a.returnInfo, returnInfo = _f === void 0 ? undefined : _f, unsupported = __rest(_a, ["page", "count", "sortBy", "sortByAsc", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "articles";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesInfo: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (page < 1) {
            throw new RangeError("page has to be >= 1");
        }
        if (count > 200) {
            throw new RangeError("at most 200 articles can be returned per call");
        }
        _this.params = {};
        _this.params["articlesPage"] = page;
        _this.params["articlesCount"] = count;
        _this.params["articlesSortBy"] = sortBy;
        _this.params["articlesSortByAsc"] = sortByAsc;
        if (!!returnInfo) {
            _this.params = _.extend({}, _this.params, returnInfo.getParams("articles"));
        }
        return _this;
    }
    return RequestArticlesInfo;
}(RequestArticles));
exports.RequestArticlesInfo = RequestArticlesInfo;
var RequestArticlesUriWgtList = /** @class */ (function (_super) {
    __extends(RequestArticlesUriWgtList, _super);
    function RequestArticlesUriWgtList(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.count, count = _c === void 0 ? 10000 : _c, _d = _a.sortBy, sortBy = _d === void 0 ? "fq" : _d, _e = _a.sortByAsc, sortByAsc = _e === void 0 ? false : _e, unsupported = __rest(_a, ["page", "count", "sortBy", "sortByAsc"]);
        var _this = _super.call(this) || this;
        _this.resultType = "uriWgtList";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesUriWgtList: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (page < 1) {
            throw new RangeError("page has to be >= 1");
        }
        if (count > 50000) {
            throw new RangeError("at most 50000 items can be returned per call");
        }
        _this.params = {};
        _this.params["uriWgtListPage"] = page;
        _this.params["uriWgtListCount"] = count;
        _this.params["uriWgtListSortBy"] = sortBy;
        _this.params["uriWgtListSortByAsc"] = sortByAsc;
        return _this;
    }
    RequestArticlesUriWgtList.prototype.setPage = function (page) {
        if (page < 1) {
            throw new RangeError("page has to be >= 1");
        }
        this.params["uriWgtListPage"] = page;
    };
    return RequestArticlesUriWgtList;
}(RequestArticles));
exports.RequestArticlesUriWgtList = RequestArticlesUriWgtList;
var RequestArticlesTimeAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesTimeAggr, _super);
    function RequestArticlesTimeAggr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.resultType = "timeAggr";
        return _this;
    }
    return RequestArticlesTimeAggr;
}(RequestArticles));
exports.RequestArticlesTimeAggr = RequestArticlesTimeAggr;
var RequestArticlesConceptAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesConceptAggr, _super);
    function RequestArticlesConceptAggr(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.conceptCount, conceptCount = _b === void 0 ? 25 : _b, _c = _a.conceptCountPerType, conceptCountPerType = _c === void 0 ? undefined : _c, _d = _a.conceptScoring, conceptScoring = _d === void 0 ? "importance" : _d, _e = _a.articlesSampleSize, articlesSampleSize = _e === void 0 ? 10000 : _e, _f = _a.returnInfo, returnInfo = _f === void 0 ? new returnInfo_1.ReturnInfo() : _f, unsupported = __rest(_a, ["conceptCount", "conceptCountPerType", "conceptScoring", "articlesSampleSize", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "conceptAggr";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesConceptAggr: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (conceptCount > 500) {
            throw new RangeError("At most 500 concepts can be returned per call");
        }
        if (articlesSampleSize > 20000) {
            throw new RangeError("at most 20000 articles can be used for computation sample");
        }
        _this.params = {};
        _this.params["conceptAggrConceptCount"] = conceptCount;
        _this.params["conceptAggrSampleSize"] = articlesSampleSize;
        _this.params["conceptAggrScoring"] = conceptScoring;
        if (!_.isUndefined(conceptCountPerType)) {
            _this.params["conceptAggrConceptCountPerType"] = conceptCountPerType;
        }
        _this.params = _.extend({}, _this.params, returnInfo.getParams("conceptAggr"));
        return _this;
    }
    return RequestArticlesConceptAggr;
}(RequestArticles));
exports.RequestArticlesConceptAggr = RequestArticlesConceptAggr;
var RequestArticlesCategoryAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesCategoryAggr, _super);
    function RequestArticlesCategoryAggr(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.articlesSampleSize, articlesSampleSize = _b === void 0 ? 20000 : _b, _c = _a.returnInfo, returnInfo = _c === void 0 ? new returnInfo_1.ReturnInfo() : _c, unsupported = __rest(_a, ["articlesSampleSize", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "categoryAggr";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesCategoryAggr: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (articlesSampleSize > 50000) {
            throw new RangeError("at most 50000 articles can be used for computation sample");
        }
        _this.params = {};
        _this.params["categoryAggrSampleSize"] = articlesSampleSize;
        _this.params = _.extend({}, _this.params, returnInfo.getParams("categoryAggr"));
        return _this;
    }
    return RequestArticlesCategoryAggr;
}(RequestArticles));
exports.RequestArticlesCategoryAggr = RequestArticlesCategoryAggr;
var RequestArticlesSourceAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesSourceAggr, _super);
    function RequestArticlesSourceAggr(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.sourceCount, sourceCount = _b === void 0 ? 50 : _b, _c = _a.normalizeBySourceArts, normalizeBySourceArts = _c === void 0 ? false : _c, _d = _a.returnInfo, returnInfo = _d === void 0 ? new returnInfo_1.ReturnInfo() : _d, unsupported = __rest(_a, ["sourceCount", "normalizeBySourceArts", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "sourceAggr";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesSourceAggr: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        _this.params = {};
        _this.params["sourceAggrSourceCount"] = sourceCount;
        _this.params = _.extend({}, _this.params, returnInfo.getParams("sourceAggr"));
        return _this;
    }
    return RequestArticlesSourceAggr;
}(RequestArticles));
exports.RequestArticlesSourceAggr = RequestArticlesSourceAggr;
var RequestArticlesKeywordAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesKeywordAggr, _super);
    function RequestArticlesKeywordAggr(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.articlesSampleSize, articlesSampleSize = _b === void 0 ? 2000 : _b, unsupported = __rest(_a, ["articlesSampleSize"]);
        var _this = _super.call(this) || this;
        _this.resultType = "keywordAggr";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesKeywordAggr: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (articlesSampleSize > 20000) {
            throw new RangeError("at most 20000 articles can be used for computation sample");
        }
        _this.params = {};
        _this.params["keywordAggrSampleSize"] = articlesSampleSize;
        return _this;
    }
    return RequestArticlesKeywordAggr;
}(RequestArticles));
exports.RequestArticlesKeywordAggr = RequestArticlesKeywordAggr;
var RequestArticlesConceptGraph = /** @class */ (function (_super) {
    __extends(RequestArticlesConceptGraph, _super);
    function RequestArticlesConceptGraph(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.conceptCount, conceptCount = _b === void 0 ? 25 : _b, _c = _a.linkCount, linkCount = _c === void 0 ? 50 : _c, _d = _a.articlesSampleSize, articlesSampleSize = _d === void 0 ? 10000 : _d, _e = _a.skipQueryConcepts, skipQueryConcepts = _e === void 0 ? true : _e, _f = _a.returnInfo, returnInfo = _f === void 0 ? new returnInfo_1.ReturnInfo() : _f, unsupported = __rest(_a, ["conceptCount", "linkCount", "articlesSampleSize", "skipQueryConcepts", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "conceptGraph";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesConceptGraph: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (conceptCount > 1000) {
            throw new RangeError("At most 1000 concepts can be returned per call");
        }
        if (linkCount > 2000) {
            throw new RangeError("at most 2000 links can be returned per call");
        }
        if (articlesSampleSize > 50000) {
            throw new RangeError("at most 50000 results can be used for computation sample");
        }
        _this.params = {};
        _this.params["conceptGraphConceptCount"] = conceptCount;
        _this.params["conceptGraphLinkCount"] = linkCount;
        _this.params["conceptGraphSampleSize"] = articlesSampleSize;
        _this.params["conceptGraphSkipQueryConcepts"] = skipQueryConcepts;
        _this.params = _.extend({}, _this.params, returnInfo.getParams("conceptGraph"));
        return _this;
    }
    return RequestArticlesConceptGraph;
}(RequestArticles));
exports.RequestArticlesConceptGraph = RequestArticlesConceptGraph;
var RequestArticlesConceptMatrix = /** @class */ (function (_super) {
    __extends(RequestArticlesConceptMatrix, _super);
    function RequestArticlesConceptMatrix(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.conceptCount, conceptCount = _b === void 0 ? 25 : _b, _c = _a.measure, measure = _c === void 0 ? "pmi" : _c, _d = _a.articlesSampleSize, articlesSampleSize = _d === void 0 ? 10000 : _d, _e = _a.returnInfo, returnInfo = _e === void 0 ? new returnInfo_1.ReturnInfo() : _e, unsupported = __rest(_a, ["conceptCount", "measure", "articlesSampleSize", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "conceptMatrix";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesConceptMatrix: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (conceptCount > 200) {
            throw new RangeError("At most 200 concepts can be returned per call");
        }
        if (articlesSampleSize > 50000) {
            throw new RangeError("at most 50000 results can be used for computation sample");
        }
        _this.params = {};
        _this.params["conceptMatrixConceptCount"] = conceptCount;
        _this.params["conceptMatrixMeasure"] = measure;
        _this.params["conceptMatrixSampleSize"] = articlesSampleSize;
        _this.params = _.extend({}, _this.params, returnInfo.getParams("conceptMatrix"));
        return _this;
    }
    return RequestArticlesConceptMatrix;
}(RequestArticles));
exports.RequestArticlesConceptMatrix = RequestArticlesConceptMatrix;
var RequestArticlesConceptTrends = /** @class */ (function (_super) {
    __extends(RequestArticlesConceptTrends, _super);
    function RequestArticlesConceptTrends(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.conceptUris, conceptUris = _b === void 0 ? undefined : _b, _c = _a.conceptCount, conceptCount = _c === void 0 ? 25 : _c, _d = _a.articlesSampleSize, articlesSampleSize = _d === void 0 ? 10000 : _d, _e = _a.returnInfo, returnInfo = _e === void 0 ? new returnInfo_1.ReturnInfo() : _e, unsupported = __rest(_a, ["conceptUris", "conceptCount", "articlesSampleSize", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "conceptTrends";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesConceptTrends: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (conceptCount > 50) {
            throw new RangeError("At most 50 concepts can be returned per call");
        }
        if (articlesSampleSize > 50000) {
            throw new RangeError("at most 50000 results can be used for computation sample");
        }
        _this.params = {};
        if (!_.isUndefined(conceptUris)) {
            _this.params["conceptTrendsConceptUri"] = conceptUris;
        }
        _this.params["conceptTrendsConceptCount"] = conceptCount;
        _this.params["conceptTrendsSampleSize"] = articlesSampleSize;
        _this.params = _.extend({}, _this.params, returnInfo.getParams("conceptTrends"));
        return _this;
    }
    return RequestArticlesConceptTrends;
}(RequestArticles));
exports.RequestArticlesConceptTrends = RequestArticlesConceptTrends;
var RequestArticlesDateMentionAggr = /** @class */ (function (_super) {
    __extends(RequestArticlesDateMentionAggr, _super);
    function RequestArticlesDateMentionAggr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.resultType = "dateMentionAggr";
        return _this;
    }
    return RequestArticlesDateMentionAggr;
}(RequestArticles));
exports.RequestArticlesDateMentionAggr = RequestArticlesDateMentionAggr;
var RequestArticlesRecentActivity = /** @class */ (function (_super) {
    __extends(RequestArticlesRecentActivity, _super);
    function RequestArticlesRecentActivity(_a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.maxArticleCount, maxArticleCount = _b === void 0 ? 100 : _b, _c = _a.updatesAfterNewsUri, updatesAfterNewsUri = _c === void 0 ? undefined : _c, _d = _a.updatesafterBlogUri, updatesafterBlogUri = _d === void 0 ? undefined : _d, _e = _a.updatesAfterPrUri, updatesAfterPrUri = _e === void 0 ? undefined : _e, _f = _a.updatesAfterTm, updatesAfterTm = _f === void 0 ? undefined : _f, _g = _a.updatesAfterMinsAgo, updatesAfterMinsAgo = _g === void 0 ? undefined : _g, _h = _a.updatesUntilTm, updatesUntilTm = _h === void 0 ? undefined : _h, _j = _a.updatesUntilMinsAgo, updatesUntilMinsAgo = _j === void 0 ? undefined : _j, _k = _a.mandatorySourceLocation, mandatorySourceLocation = _k === void 0 ? false : _k, _l = _a.returnInfo, returnInfo = _l === void 0 ? undefined : _l, unsupported = __rest(_a, ["maxArticleCount", "updatesAfterNewsUri", "updatesafterBlogUri", "updatesAfterPrUri", "updatesAfterTm", "updatesAfterMinsAgo", "updatesUntilTm", "updatesUntilMinsAgo", "mandatorySourceLocation", "returnInfo"]);
        var _this = _super.call(this) || this;
        _this.resultType = "recentActivityArticles";
        if (!_.isEmpty(unsupported)) {
            console.warn("RequestArticlesRecentActivity: Unsupported parameters detected: " + JSON.stringify(unsupported) + ". Please check the documentation.");
        }
        if (maxArticleCount > 2000) {
            throw new RangeError("At most 2000 articles can be returned per call");
        }
        if (!_.isUndefined(updatesAfterTm) && !_.isUndefined(updatesAfterMinsAgo)) {
            throw new Error("You should specify either updatesAfterTm or updatesAfterMinsAgo parameter, but not both");
        }
        if (!_.isUndefined(updatesUntilTm) && !_.isUndefined(updatesUntilMinsAgo)) {
            throw new Error("You should specify either updatesUntilTm or updatesUntilMinsAgo parameter, but not both");
        }
        _this.params = {};
        _this.params["recentActivityArticlesMaxArticleCount"] = maxArticleCount;
        if (!_.isUndefined(updatesAfterTm)) {
            _this.params["recentActivityArticlesUpdatesAfterTm"] = base_1.QueryParamsBase.encodeDateTime(updatesAfterTm);
        }
        if (!_.isUndefined(updatesAfterMinsAgo)) {
            _this.params["recentActivityArticlesUpdatesAfterMinsAgo"] = updatesAfterMinsAgo;
        }
        if (!_.isUndefined(updatesUntilTm)) {
            _this.params["recentActivityArticlesUpdatesUntilTm"] = base_1.QueryParamsBase.encodeDateTime(updatesUntilTm);
        }
        if (!_.isUndefined(updatesUntilMinsAgo)) {
            _this.params["recentActivityArticlesUpdatesUntilMinsAgo"] = updatesUntilMinsAgo;
        }
        if (!_.isUndefined(updatesAfterNewsUri)) {
            _this.params["recentActivityArticlesNewsUpdatesAfterUri"] = updatesAfterNewsUri;
        }
        if (!_.isUndefined(updatesafterBlogUri)) {
            _this.params["recentActivityArticlesNewsUpdatesAfterUri"] = updatesafterBlogUri;
        }
        if (!_.isUndefined(updatesAfterPrUri)) {
            _this.params["recentActivityArticlesNewsUpdatesAfterUri"] = updatesAfterPrUri;
        }
        _this.params["recentActivityArticlesMandatorySourceLocation"] = mandatorySourceLocation;
        if (!!returnInfo) {
            _this.params = _.extend({}, _this.params, returnInfo.getParams("recentActivityArticles"));
        }
        return _this;
    }
    return RequestArticlesRecentActivity;
}(RequestArticles));
exports.RequestArticlesRecentActivity = RequestArticlesRecentActivity;
//# sourceMappingURL=queryArticles.js.map